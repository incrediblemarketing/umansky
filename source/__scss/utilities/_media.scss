/* -------------------------------------------------- */
/* IMAGE 
/* -------------------------------------------------- */

// COMMON
img {

    display: block;
    width: 100%;
    height: auto;
    border: 0;

    &.lazy:not(.no-lazy) {

        @extend .blur-md;
        @include transition($property: (opacity), $duration: 500ms, $ease: ease-out, $delay: 0);
        
        opacity: 0;

    }

    &.initial:not(.no-lazy),
    &.loaded:not(.no-lazy),
    &.error:not(.no-lazy) {

        @extend .blur-none;
        opacity: 1;
    }

    &:not([src]) {
        visibility: hidden;
    }

    /* IE Edge fix for IntersectionObserver. */
    &[data-src],
    &[data-srcset] {

        display: block;
        min-height: 1px;

    }

}

svg {

    display: block;
    width: 100%;
    height: auto;
    //max-height: 100px;
    shape-rendering: auto;

}

div.lazy {

    @include transition($property: (opacity, transform), $duration: 400ms, $ease: ease-out, $delay: 1);

    @extend .scale-lg;
    opacity: 0;

    &[data-was-processed='true'] {

        //@extend .scale-none;
        opacity: 1;
        transform: scale(1) !important;

    }

}


// SIZES
.#{$element}img#{$modifier} {

    @each $name, $width in $widths {

        &#{$name} {

            @include breakpoint($type: 'all', $keep-original: true, $prefix: '-', $suffix: '') {

                max-width: round($width / 2);

            }

        }

    }

}

.#{$element}thumb#{$modifier} {

    @each $name, $amount in $amounts {

        &#{$name} {

            @include breakpoint($type: 'all', $keep-original: true, $prefix: '-', $suffix: '') {

                max-width: round($amount * 10);

            }

        }

    }

}


/* -------------------------------------------------- */
/* VIDEO 
/* -------------------------------------------------- */

.#{$element}media-frame {

    @include shadow($type: 'box-shadow', $color: $charcoal, $x: 10px, $y: 10px, $blur: 50px, $spread: 0, $alpha: 0.12, $strength: 0, $inset: false);

    position: relative;
    height: auto;
    background-color: $gray;


        &::after {

            @extend %pseudo;

            z-index: auto;
            pointer-events: none;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            border: 10px solid $white;

        }

    video {

        cursor: pointer;
        position: relative;
        display: block;
        width: 100%;

    }

}
